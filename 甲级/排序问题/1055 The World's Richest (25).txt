//方法1：22/25 一个用例超时
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

struct Person
{
	string name;
	int age;
	int worth;
};

bool cmp(const Person &a, const Person &b) {
	if (a.worth > b.worth) return 1;
	if (a.worth < b.worth) return 0;
	if (a.age < b.age) return 1;
	if (a.age > b.age) return 0;
	if (a.name < b.name) return 1;
	return 0;
}

int main() {
	int n, k, age, worth, rank, amin, amax;
	char name[50];
	scanf("%d%d", &n, &k);
	vector<Person> all_p(n);
	vector<Person> p[201];
	for (int i = 0; i < n; i++) {
		scanf("%s %d %d", name, &all_p[i].age, &all_p[i].worth);
		all_p[i].name = name;
	}
	sort(all_p.begin(), all_p.end(), [](const Person &a, const Person &b) {return a.worth > b.worth; });
	for (int i = 0; i < n; i++) {
		if(p[all_p[i].age].size()<100)
			p[all_p[i].age].push_back(all_p[i]);
	}
	for (int i = 1; i <= k; i++) {
		vector<Person> temp_v;
		scanf("%d%d%d", &rank, &amin, &amax);
		for (int j = amin; j <= amax; j++) {
			for (auto c : p[j]) {
				temp_v.push_back(c);
			}
		}
		sort(temp_v.begin(), temp_v.end(), cmp);
		printf("Case #%d:\n", i);
		for (auto c : temp_v) {
			if (rank == 0) break; 
			printf("%s %d %d\n", c.name.c_str(), c.age, c.worth);
			rank--;
		}
		if (temp_v.empty()) printf("None\n");
	}
	return 0;
}
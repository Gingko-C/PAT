//AC
//本题会超出unsigned long long int 的上限 故使用string或vector进行运算（本方法用了vector，实际上直接用string更好）
#include <vector>
#include <iostream>
#include <algorithm>
#include <string>
using namespace std;

vector<int> sum_v(vector<int> &l, vector<int> &r) {
	int upnum = 0;
	vector<int> li;
	int temp;
	for (int i = l.size() - 1; i >= 0; i--) {
		temp = l[i] + r[i] + upnum;
		if (temp >= 10) {
			upnum = 1;
			temp -= 10;
		}
		else upnum = 0;
		li.push_back(temp);
	}
	if (upnum == 1) li.push_back(1);
	return vector<int>(li.rbegin(), li.rend());
}

vector<int> n_plus_n_r(vector<int> n_v) {
	vector<int> n_r_v(n_v.rbegin(), n_v.rend());
	return sum_v(n_v, n_r_v);
}

bool isPalindromic(vector<int> n_v) {
	bool res = 1;
	for (int i = 0; i <= n_v.size() / 2; i++) {
		if (n_v[i] != n_v[n_v.size() - i - 1]) {
			res = 0;
			break;
		}
	}
	return res;
}

int main() {
	string n_str;
	cin >> n_str;
	int m;
	cin >> m;
	int step = 0;
	vector<int> n_v;
	for_each(n_str.begin(), n_str.end(), [&n_v](char c) {n_v.push_back(c - '0'); });
	if (!isPalindromic(n_v)) {
		for (int i = 0; i < m; i++) {
			n_v = n_plus_n_r(n_v);
			step++;
			if (isPalindromic(n_v)) {
				break;
			}
		}
	}
	for (auto i : n_v) {
		cout << i;
	}
	cout << endl;
	cout << step << endl;
	return 0;
}